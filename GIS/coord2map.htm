<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Leaflet UTM Demo</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"/>
    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet-src.js"></script>

    <style type="text/css">
		body {/*height:100%; position:fixed;*/ /* prevent overscroll bounce*/
		/* https://css-tricks.com/the-trick-to-viewport-units-on-mobile/: */
		/* Fallback for browsers that do not support Custom Properties: */ /*height: 100vh; */
		/* height: calc(var(--vh, 1vh) * 100); */
		
		}
        html { font-family: Helvetica, Verdana, Arial, sans-serif; }
        /* #map { width: 95%; height: 250px; margin: 2px; } */
		#map {height: 75vh; width: 100vw;}
		#menu {border: 1px dashed blue; width:85%; height:50%;}
        form { margin: 2px; }
        .btn { margin: 2px; }
        #consola { margin: 2px; }

        .crosshairs:before, .crosshairs:after {
          content: '';
          position: absolute;
          width: 32px;
          height: 32px;
          z-index: 999;
          pointer-events: none;
        }
        .crosshairs:before {
          bottom: 50%;
          left: 50%;
          transform: translate(-50%, 0);
          border-bottom: 1px #000 solid;
        }
        .crosshairs:after {
          right: 50%;
          top: 50%;
          transform: translate(0, -50%);
          border-right: 1px #000 solid;
        }
    </style>
</head>

<body>
<div id=formulario class="menu">
    <form id="frm1" action="">
      Lat.:<input type="text" name="lat" value="0" size="6">
      Lon.:<input type="text" name="lng" value="0" size="6">
      <span class="btn"><input type="button" onclick="toUTMBtn()" value="to UTM"></span>
      <span id="result1"></span>
    </form>
    <form id="frm2" action="">
      X:<input type="text" name="x" value="600000" size="6" title="UTM Easting (500000 m = center meridian of UTM zone)">
      Y:<input type="text" name="y" value="4700000" size="7" title="UTM Northing (0-10 million m)">
      z:<input type="text" name="zone" value="29" size="2" maxlength="2" title="UTM longitudinal zone (1-60 from West to East)">
      b:<input type="text" name="band" value="T" size="1" maxlength="2" title="UTM latitudinal band (C-X from South to North)">
      (southHemi: <input type="text" name="southHemi" value="" size="1" maxlength="5" title="used only if band is empty">)
      <span class="btn"><input type="button" onclick="toLatLngBtn()" value="to LL"></span>
      <span id="result2"></span>
    </form>
</div>
    <div id="map" class="crosshairs"></div>
    <!--div id="overlay" style="position:absolute; top:0px; left:100px; background-color:white; width:100px; height:100px; z-index: 400"> My Test</div-->
    <div id="consola"></div>

    <script src="./basemap.js"></script>
    <script src="./L.LatLng.UTM.js"></script>

    <script type="text/javascript">
	function consolar(rollo) {
		var panel=document.getElementById("consola");
		panel.innerHTML=rollo;
	}
	/* // https://css-tricks.com/the-trick-to-viewport-units-on-mobile/
	// We listen to the resize event
	window.addEventListener('resize', () => {
	  // We execute the same script as before
	  let vh = window.innerHeight * 0.01;
	  document.documentElement.style.setProperty('--vh', `${vh}px`);
	});*/

        var el1 = document.forms.frm1.elements;
        var el2 = document.forms.frm2.elements;

        function toUTMBtn() {
            document.getElementById('result1').innerHTML = '---';
            var ll = L.latLng(el1.lat.value, el1.lng.value);
            var utm = ll.utm();
            marker.setLatLng(ll).bindPopup(utm + '<br>' + ll);//.openPopup();
				map.setView(ll);
            el2.x.value = utm.x.toFixed(1);
            el2.y.value = utm.y.toFixed(1);
            el2.zone.value = utm.zone;
            el2.band.value = utm.band;
            el2.southHemi.value = utm.southHemi;
            document.getElementById('result1').innerHTML = '' + utm;
        }

        function toLatLngBtn() {
            document.getElementById('result2').innerHTML = '---';
            var sh = el2.southHemi.value.toLowerCase();
            var southHemi = ['true', 'y', 'yes', '1'].indexOf(sh) > -1 ? true : false;
            var utm = L.utm(el2.x.value, el2.y.value, el2.zone.value, el2.band.value, southHemi);
            var ll = utm.latLng();
            if (ll) {
                marker.setLatLng(ll).bindPopup(utm + '<br>' + ll);//.openPopup();
				map.setView(ll);
                el1.lat.value = ll.lat.toFixed(6);
                el1.lng.value = ll.lng.toFixed(6);
                document.getElementById('result2').innerHTML = '' + ll;
            }
        }

        var options = {
            attribution:
                '<a href="https://openstreetmap.org/copyright"</a> &copy; ' +
                'OpenStreetmap Contributors',
            subdomains: 'abc',
            minZoom: 0,
            maxZoom: 19
        };
		function checkparams() {
			/* Comprobar se ao script se lle pasaron unhas coordenadas ou zoom concretos:
				https://stackoverflow.com/questions/979975/how-to-get-the-value-from-the-get-parameters
				https://gomakethings.com/getting-all-query-string-values-from-a-url-with-vanilla-js/
				https://davidwalsh.name/query-string-javascript
			*/
			var url = new URL(window.location.href);
			var q = url.searchParams;
			if(q.toLocaleString().length > 0) {
				if(typeof q.get("lat") !== 'undefined') if(q.get("lat") !== null) latit = parseFloat(q.get("lat"));
				if(typeof q.get("lon") !== 'undefined') if(q.get("lon") !== null) lonxit = parseFloat(q.get("lon"));
				var retorno = true;
			} else {
				var retorno = false;
			}
			return retorno;
		}
        var osm = L.tileLayer('//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', options);
		var latit=42.5, lonxit=-8.0;
		latit = 42.682435; lonxit = -8.179344;
		latit = 42.8489; lonxit = -7.999732; // punto triple C-Lu-Po
		// centro xeografico GZ IGN: 42.756984, -7.910827 https://www.lavozdegalicia.es/noticia/lugo/antas-de-ulla/2019/12/21/centro-geografico-galicia-calculado-algoritmo/0003_201912D21C3993.htm
		/* punto intermedio E-W / N-S  (non centroide): X=475443+(686710-475443)/2=581076.5 ; Y=4628890+(4849612-4628890)/2=4739251
		   UTM: 581076.5, 4739251.0, 29T, WGS84 ; LatLng(42.80152, -8.008488) */
		checkparams();
		el1.lat.value = latit;
		el1.lng.value = lonxit;
		basemap(latit, lonxit, 12, "map");
        //var map = L.map('map', {layers: [osm], center: [latit,lonxit], zoom: 10});
        var marker = new L.Marker([latit, lonxit]).addTo(map);
		function onLocationFound(e) {
			var radius = e.accuracy;
			var posicion = new L.Circle(e.latlng, radius);
			consolar("location found: "+JSON.stringify(e.latlng));
			posicion.addTo(map).bindPopup("Your are within " + radius + " meters from the center of this circle");
			var utm = e.latlng.utm();
			marker.setLatLng(e.latlng).bindPopup(utm + '<br>' + utm.latLng());//.openPopup();
			el1.lat.value = e.latlng.lat.toFixed(6);
			el1.lng.value = e.latlng.lng.toFixed(6);
			el2.x.value = utm.x.toFixed(1);
			el2.y.value = utm.y.toFixed(1);
			el2.zone.value = utm.zone;
			el2.band.value = utm.band;
			el2.southHemi.value = utm.southHemi;
		}
		function onLocationError(e) {
			consolar("location not found:"+e.message);
		}
		map.on('locationfound', onLocationFound);
		map.on('locationerror', onLocationError);
		if(! checkparams() ) map.locate({setView: true, maxZoom: 16, timeout: 10000, maximumAge: 10000});
       // toUTMBtn();

        map.on('move', function(e) {
            var c = map.getCenter();
            document.getElementById('consola').innerHTML = c + '<br>UTM: ' + c.utm();
        });
        map.fire('move');
    </script>
</body>
</html>